/* keves_instruct.cpp - instructs for Keves
 * Keves will be an R6RS Scheme implementation.
 *
 * Copyright (C) 2014  Yasuhiro Yamakawa <kawatab@yahoo.co.jp>
 *
 * This program is free software: you can redistribute it and/or modify it
 * under the terms of the GNU Lesser General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or any
 * later version.
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public
 * License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */


#include "value/instruct.hpp"

KevesInstructTable::KevesInstructTable() {
#define INIT_CHECK_SUM() int check_sum = 0;
#define CHECK_SUM(x) Q_ASSERT(check_sum == (CMD_ ## x + 1) * CMD_ ## x / 2);
#define SET_NAME_TO_TABLE(x) array[CMD_ ## x] = "<" #x ">"; check_sum += CMD_ ## x;

  INIT_CHECK_SUM();

  // essential
  SET_NAME_TO_TABLE(NOP);
  SET_NAME_TO_TABLE(HALT);
  SET_NAME_TO_TABLE(JUMP);
  SET_NAME_TO_TABLE(JUMP_R);
  SET_NAME_TO_TABLE(SKIP);
  SET_NAME_TO_TABLE(TEST);
  SET_NAME_TO_TABLE(TEST_R);
  SET_NAME_TO_TABLE(TEST0);
  SET_NAME_TO_TABLE(TEST_NOT_R);
  SET_NAME_TO_TABLE(SWITCH_N_ARG);
  SET_NAME_TO_TABLE(SWITCH_N_ARG_R);
  SET_NAME_TO_TABLE(FRAME);
  SET_NAME_TO_TABLE(FRAME_R);
  SET_NAME_TO_TABLE(SFRAME);
  SET_NAME_TO_TABLE(APPLY);
  SET_NAME_TO_TABLE(APPLY_CONSTANT);
  SET_NAME_TO_TABLE(APPLY_MULT);
  SET_NAME_TO_TABLE(RETURN);
  SET_NAME_TO_TABLE(RETURN_CONSTANT);
  SET_NAME_TO_TABLE(RETURN0);
  SET_NAME_TO_TABLE(RETURN_VOID);
  SET_NAME_TO_TABLE(REFER_LOCAL);
  SET_NAME_TO_TABLE(REFER_LOCAL0);
  SET_NAME_TO_TABLE(REFER_FREE);
  SET_NAME_TO_TABLE(REFER_FREE0);
  SET_NAME_TO_TABLE(CONSTANT);
  SET_NAME_TO_TABLE(ASSIGN_LOCAL);
  SET_NAME_TO_TABLE(ASSIGN_LOCAL0);
  SET_NAME_TO_TABLE(CALL_LAMBDA);
  SET_NAME_TO_TABLE(CALL_LAMBDA_VLA);
  SET_NAME_TO_TABLE(ASSIGN_FREE);
  SET_NAME_TO_TABLE(ASSIGN_FREE0);
  SET_NAME_TO_TABLE(ASSIGN_MULT);
  SET_NAME_TO_TABLE(CLOSE_R);
  SET_NAME_TO_TABLE(NEW_BOX);
  SET_NAME_TO_TABLE(BOX);
  SET_NAME_TO_TABLE(RAISE);
  SET_NAME_TO_TABLE(RAISE_CONSTANT);
  SET_NAME_TO_TABLE(CLEAR_VALS);
  SET_NAME_TO_TABLE(LAST_POP_TEST);
  SET_NAME_TO_TABLE(LAST_POP_TEST_R);
  SET_NAME_TO_TABLE(DEBUG_CODE);
  CHECK_SUM(DEBUG_CODE);

  // argument
  SET_NAME_TO_TABLE(LAST);
  SET_NAME_TO_TABLE(ARGUMENT);
  SET_NAME_TO_TABLE(PUSH);
  SET_NAME_TO_TABLE(PUSH_CONSTANT);
  SET_NAME_TO_TABLE(POP);
  CHECK_SUM(POP);

  // for Kev
  SET_NAME_TO_TABLE(TEST_QEV_EQUAL);

  // for numbers
  SET_NAME_TO_TABLE(TEST_NUMBER);
  SET_NAME_TO_TABLE(TEST_NUMBER0);
  SET_NAME_TO_TABLE(TEST_NUMBER0_R);

  SET_NAME_TO_TABLE(TEST_NUMBER_EQUAL);

  // for char
  SET_NAME_TO_TABLE(TEST_CHAR);
  SET_NAME_TO_TABLE(TEST_CHAR0);
  SET_NAME_TO_TABLE(TEST_CHAR_EQUAL);

  // for symbols
  SET_NAME_TO_TABLE(TEST_SYMBOL);
  SET_NAME_TO_TABLE(TEST_SYMBOL0);
  SET_NAME_TO_TABLE(TEST_SYMBOL_EQUAL);

  // for strings
  SET_NAME_TO_TABLE(STRING_CLONE);
  SET_NAME_TO_TABLE(STRING_APPEND);
  SET_NAME_TO_TABLE(TEST_STRING);
  SET_NAME_TO_TABLE(TEST_STRING0);
  SET_NAME_TO_TABLE(TEST_STRING_EQUAL);

  // for pairs
  SET_NAME_TO_TABLE(CONS);
  SET_NAME_TO_TABLE(CONS_CONSTANT);
  SET_NAME_TO_TABLE(CAR);
  SET_NAME_TO_TABLE(CAR0);
  SET_NAME_TO_TABLE(CDR);
  SET_NAME_TO_TABLE(CDR0);
  SET_NAME_TO_TABLE(TEST_PAIR);
  SET_NAME_TO_TABLE(TEST_PAIR0);
  SET_NAME_TO_TABLE(TEST_NULL);
  SET_NAME_TO_TABLE(TEST_NULL0);
  CHECK_SUM(TEST_NULL0);

  // for call/cc
  SET_NAME_TO_TABLE(UNWIND_CONTINUATION);
  SET_NAME_TO_TABLE(REVERT_DYNAMIC_WIND);

  // for dynamic-wind
  SET_NAME_TO_TABLE(SET_DYNAMIC_WIND);
  SET_NAME_TO_TABLE(REMOVE_DYNAMIC_WIND);

  // for vectors
  SET_NAME_TO_TABLE(LIST_TO_VECTOR);
  CHECK_SUM(LIST_TO_VECTOR);

  // for conditions
  SET_NAME_TO_TABLE(TEST_CONDITION);

  // for syntax
  SET_NAME_TO_TABLE(SYNTAX);

  // expander
  SET_NAME_TO_TABLE(BEGIN);
  SET_NAME_TO_TABLE(TERMINATE_EXPAND);
  SET_NAME_TO_TABLE(ADD_GLOBAL_VARIABLE);
  CHECK_SUM(ADD_GLOBAL_VARIABLE);

  SET_NAME_TO_TABLE(EXPORT_SYMBOL);
  SET_NAME_TO_TABLE(TEST_ENVIRONMENT);
  CHECK_SUM(TEST_ENVIRONMENT);

#undef SET_NAME_TO_TABLE
#undef CHECK_SUM
#undef INIT_CHECK_SUM
};
